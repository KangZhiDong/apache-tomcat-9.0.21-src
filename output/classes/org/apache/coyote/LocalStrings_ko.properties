# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

abstractConnectionHandler.connectionsGet=\uc18c\ucf13 [{1}]\uc744(\ub97c) \uc704\ud55c \ud504\ub85c\uc138\uc11c [{0}]\uc744(\ub97c) \ubc1c\uacac\ud588\uc2b5\ub2c8\ub2e4.
abstractConnectionHandler.error=\uc694\uccad\uc744 \uc77d\ub294 \uc911 \uc624\ub958 \ubc1c\uc0dd. \ubb34\uc2dc\ud569\ub2c8\ub2e4.
abstractConnectionHandler.ioexception.debug=IOException\ub4e4\uc740 \uc815\uc0c1\uc801\uc774\ubbc0\ub85c, \ubb34\uc2dc\ud569\ub2c8\ub2e4.
abstractConnectionHandler.negotiatedProcessor.fail=Negotiate\ub41c \ud504\ub85c\ud1a0\ucf5c [{0}]\uc744(\ub97c) \uc704\ud55c \ud504\ub85c\uc138\uc11c\ub97c \uc0dd\uc131\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4.
abstractConnectionHandler.process=\uc0c1\ud0dc\uac00 [{1}]\uc778 \uc18c\ucf13 [{0}]\uc744(\ub97c) \ucc98\ub9ac\ud569\ub2c8\ub2e4.
abstractConnectionHandler.processorPop=\uce90\uc2dc\ub85c\ubd80\ud130 \ud504\ub85c\uc138\uc11c [{0}]\uc744(\ub97c) \ucd94\ucd9c\ud588\uc2b5\ub2c8\ub2e4.
abstractConnectionHandler.protocolexception.debug=ProtocolException\ub4e4\uc740 \uc815\uc0c1\uc801\uc774\ubbc0\ub85c, \ubb34\uc2dc\ud569\ub2c8\ub2e4.
abstractConnectionHandler.socketexception.debug=SocketException\ub4e4\uc740 \uc815\uc0c1\uc801\uc778 \uc0c1\ud0dc\uc774\ubbc0\ub85c \ubb34\uc2dc\ub418\uc5c8\uc2b5\ub2c8\ub2e4.
abstractConnectionHandler.upgradeCreate=\uc18c\ucf13 wrapper [{1}]\uc744(\ub97c) \uc704\ud55c \uc5c5\uadf8\ub808\uc774\ub4dc \ud504\ub85c\uc138\uc11c [{0}]\uc744(\ub97c) \uc0dd\uc131\ud588\uc2b5\ub2c8\ub2e4.

abstractProcessor.fallToDebug=\n\
\ube44\uace0: \uc694\uccad\uc5d0 \ub300\ud55c \ud30c\uc2f1 \uc624\ub958\ub4e4\uc774 \ub354 \ubc1c\uc0dd\ud558\ub294 \uacbd\uc6b0 DEBUG \ub808\ubca8 \ub85c\uadf8\ub85c \uae30\ub85d\ub420 \uac83\uc785\ub2c8\ub2e4.
abstractProcessor.hostInvalid=\ud638\uc2a4\ud2b8 [{0}]\uc740(\ub294) \uc720\ud6a8\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.
abstractProcessor.httpupgrade.notsupported=HTTP \uc5c5\uadf8\ub808\uc774\ub4dc\ub294 \uc774 \ud504\ub85c\ud1a0\ucf5c\uc5d0 \uc758\ud574 \uc9c0\uc6d0\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.
abstractProcessor.noExecute=\uc774 \ud504\ub85c\uc138\uc11c\uac00 \ud604\uc7ac SocketWrapper\uc640 \uc5f0\uad00\ub418\uc5b4 \uc788\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0, \ucc98\ub9ac \uc791\uc5c5\uc744 \ucee8\ud14c\uc774\ub108 \uc4f0\ub808\ub4dc\ub85c \uc774\uad00\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
abstractProcessor.nonContainerThreadError=\ucee8\ud14c\uc774\ub108 \uc4f0\ub808\ub4dc\uac00 \uc544\ub2cc \uc4f0\ub808\ub4dc\uc5d0\uc11c, \ucc98\ub9ac \ub3c4\uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. \uc5f0\uacb0\uc744 \uc989\uc2dc \ub2eb\uc744 \uac83\uc785\ub2c8\ub2e4.
abstractProcessor.pushrequest.notsupported=\uc774 \ud504\ub85c\ud1a0\ucf5c\uc740 \uc11c\ubc84 push \uc694\uccad\ub4e4\uc744 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.
abstractProcessor.socket.ssl=SSL \uc18d\uc131\ub4e4\uc744 \uc5bb\uc73c\ub824\ub294 \uc911 \uc608\uc678 \ubc1c\uc0dd

abstractProtocol.mbeanDeregistrationFailed=MBean \uc11c\ubc84 [{1}](\uc73c)\ub85c\ubd80\ud130, [{0}](\uc774)\ub77c\ub294 \uc774\ub984\uc758 MBean\uc758 \ub4f1\ub85d\uc744 \uc81c\uac70\ud558\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4.

abstractProtocolHandler.asyncTimeoutError=\ube44\ub3d9\uae30 \uc81c\ud55c \uc2dc\uac04 \ucd08\uacfc\ub97c \ucc98\ub9ac\ud558\ub294 \ub3d9\uc548 \uc624\ub958 \ubc1c\uc0dd
abstractProtocolHandler.destroy=\ud504\ub85c\ud1a0\ucf5c \ud578\ub4e4\ub7ec [{0}]\uc744(\ub97c) \uc18c\uba78\uc2dc\ud0b5\ub2c8\ub2e4.
abstractProtocolHandler.init=\ud504\ub85c\ud1a0\ucf5c \ud578\ub4e4\ub7ec [{0}]\uc744(\ub97c) \ucd08\uae30\ud654\ud569\ub2c8\ub2e4.
abstractProtocolHandler.pause=\ud504\ub85c\ud1a0\ucf5c \ud578\ub4e4\ub7ec [{0}]\uc744(\ub97c) \uc77c\uc2dc \uc815\uc9c0 \uc911
abstractProtocolHandler.portOffset=\ud504\ub85c\ud1a0\ucf5c \ud578\ub4e4\ub7ec [{0}]\uc774(\uac00), base port [{1}], \uadf8\ub9ac\uace0 port offset [{2}](\uc73c)\ub85c \uc124\uc815\ub429\ub2c8\ub2e4.
abstractProtocolHandler.resume=\ud504\ub85c\ud1a0\ucf5c \ud578\ub4e4\ub7ec [{0}]\uc744(\ub97c) \uc7ac\uac1c\ud569\ub2c8\ub2e4.
abstractProtocolHandler.setAttribute=\uc18d\uc131 [{0}]\uc5d0 \uac12 [{1}]\uc744(\ub97c) \uc124\uc815
abstractProtocolHandler.start=\ud504\ub85c\ud1a0\ucf5c \ud578\ub4e4\ub7ec [{0}]\uc744(\ub97c) \uc2dc\uc791\ud569\ub2c8\ub2e4.
abstractProtocolHandler.stop=\ud504\ub85c\ud1a0\ucf5c \ud578\ub4e4\ub7ec [{0}]\uc744(\ub97c) \uc911\uc9c0\uc2dc\ud0b5\ub2c8\ub2e4.

asyncStateMachine.invalidAsyncState=\ube44\ub3d9\uae30 \uc0c1\ud0dc\uac00 [{1}]\uc778 \uc694\uccad\uc5d0 \ub300\ud558\uc5ec, [{0}]\uc744(\ub97c) \ud638\ucd9c\ud558\ub294 \uac83\uc740 \uc720\ud6a8\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.

request.notAsync=\uc624\uc9c1 \ube44\ub3d9\uae30 \ucc98\ub9ac \ub610\ub294 HTTP \uc5c5\uadf8\ub808\uc774\ub4dc \ucc98\ub9ac \uc2dc\uc5d0\ub9cc, Non-blocking IO\ub85c\uc758 \uc804\ud658\uc774 \uc720\ud6a8\ud569\ub2c8\ub2e4.
request.nullReadListener=setReadListener()\uc5d0 \uc804\ub2ec\ub41c \ub9ac\uc2a4\ub108\ub294 \ub110\uc77c \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
request.readListenerSet=Non-blocking \uc77d\uae30 \ub9ac\uc2a4\ub108\uac00 \uc774\ubbf8 \uc124\uc815\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.

response.encoding.invalid=\uc778\ucf54\ub529 [{0}]\uc740(\ub294) JRE\uc5d0 \uc758\ud574 \uc778\uc2dd\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.
response.noTrailers.notSupported=\uc774 \uc751\ub2f5\uc744 \uc704\ud574, Trailer fields supplier\uac00 \uc124\uc815\ub420 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uae30\ubc18 \ud504\ub85c\ud1a0\ucf5c\uc774 trailer field\ub4e4\uc744 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uac70\ub098, \ub610\ub294 \ud504\ub85c\ud1a0\ucf5c\uc774 \ud574\ub2f9 \uc751\ub2f5\uc774 \ucee4\ubc0b\ub418\uae30 \uc804\uc5d0 Trailer fields supplier\uac00 \uc124\uc815\ub418\uae30\ub97c \uc694\uad6c\ud569\ub2c8\ub2e4.
response.notAsync=\uc624\uc9c1 \ube44\ub3d9\uae30 \ucc98\ub9ac \uc911 \ub610\ub294 HTTP \uc5c5\uadf8\ub808\uc774\ub4dc \ucc98\ub9ac \uc911\uc77c \ub54c\uc5d0\ub9cc, non-blocking IO\ub85c \uc804\ud658\ud558\ub824\ub294 \uac83\uc774 \uc720\ud6a8\ud569\ub2c8\ub2e4.
response.notNonBlocking=\uc751\ub2f5\uc774 non-blocking \ubaa8\ub4dc \ub0b4\uc5d0 \uc788\uc9c0 \uc54a\uc744 \ub54c, isReady()\ub97c \ud638\ucd9c\ud558\ub294 \uac83\uc740 \uc720\ud6a8\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.
response.nullWriteListener=setWriteListener()\uc5d0 \uc804\ub2ec\ub418\ub294 \ub9ac\uc2a4\ub108\uac00 \ub110\uc774\uc774\uc11c\ub294 \uc548\ub429\ub2c8\ub2e4.
response.writeListenerSet=Non-blocking \uc4f0\uae30 \ub9ac\uc2a4\ub108\uac00 \uc774\ubbf8 \uc124\uc815\ub418\uc5c8\uc2b5\ub2c8\ub2e4.
