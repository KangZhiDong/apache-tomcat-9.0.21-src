# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

nioReceiver.alreadyStarted=ServerSocketChannel\uc774 \uc774\ubbf8 \uc2dc\uc791\ub418\uc5c8\uc2b5\ub2c8\ub2e4.
nioReceiver.cleanup.fail=selector close \uc2dc\uc5d0 cleanup\uc744 \ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
nioReceiver.clientDisconnect=\ubcf5\uc81c \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc5f0\uacb0\uc774 \ub04a\uacbc\uc2b5\ub2c8\ub2e4. \ud0a4\ub97c poll\ud560 \ub54c, \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. \ud574\ub2f9 \ud074\ub77c\uc774\uc5b8\ud2b8\ub294 \ubb34\uc2dc\ub429\ub2c8\ub2e4.
nioReceiver.eventsError=\uc774\ubca4\ud2b8\ub4e4\uc744 \ucc98\ub9ac\ud558\ub294 \uc911 \uc624\ub958 \ubc1c\uc0dd
nioReceiver.requestError=NioReceiver\uc5d0\uc11c \uc694\uccad\uc744 \ucc98\ub9ac\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
nioReceiver.run.fail=\ubcf5\uc81c \ub9ac\uc2a4\ub108\ub97c \uc2e4\ud589\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
nioReceiver.start.fail=\ud074\ub7ec\uc2a4\ud130 receiver\ub97c \uc2dc\uc791 \ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
nioReceiver.stop.fail=\ud074\ub7ec\uc2a4\ud130 receiver selector\ub97c \ub2eb\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
nioReceiver.stop.threadRunning=NioReceiver \uc4f0\ub808\ub4dc\uac00 \uc801\uc808\ud55c \uc2dc\uac04 \ub0b4\uc5d0 \uc911\uc9c0\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4. Selector\uac00 \ub2eb\ud790 \ub54c\uc5d0 \uc624\ub958\ub4e4\uc774 \ubc1c\uacac\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4.
nioReceiver.threadpool.fail=\uc4f0\ub808\ub4dc\ud480\uc744 \ucd08\uae30\ud654\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ub9ac\uc2a4\ub108\uac00 \uc2dc\uc791\ub418\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4.
nioReceiver.threadsExhausted=\ucc44\ub110 \ud0a4\uac00 \ub4f1\ub85d\ub418\uc9c0\ub9cc, \ub9c8\uc9c0\ub9c9 [{0}] \ubc00\ub9ac\ucd08 \ub3d9\uc548\uc5d0 \uc5b4\ub5a0\ud55c interest \uc624\ud37c\ub808\uc774\uc158\ub3c4 \uc5c6\uc5c8\uc2b5\ub2c8\ub2e4 (\ucde8\uc18c \uc5ec\ubd80: [{1}]). \ud0a4:[{2}], \ucd5c\uc885 \uc811\uadfc \uc2dc\uac04:[{3}], \uc788\uc744 \ubc95\ud55c \uc0ac\uc720: \ubaa8\ub4e0 \uc4f0\ub808\ub4dc\ub4e4\uc774 \uc0ac\uc6a9 \uc911\uc774\uace0, \uc4f0\ub808\ub4dc \ub364\ud504 \uc218\ud589.

nioReplicationTask.error.register.key=\uc77d\uae30\ub97c \uc704\ud55c \ud0a4 \ub4f1\ub85d \uc911 \uc624\ub958 \ubc1c\uc0dd: [{0}]
nioReplicationTask.exception.drainChannel=TcpReplicationThread.drainChannel\uc5d0\uc11c \uc608\uc678 \ubc1c\uc0dd
nioReplicationTask.process.clusterMsg.failed=\ud074\ub7ec\uc2a4\ud130 \uba54\uc2dc\uc9c0 \ucc98\ub9ac\uac00 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4.
nioReplicationTask.unable.ack=\ucc44\ub110\uc744 \ud1b5\ud574 ACK\uc744 \ub418\ub3cc\ub824 \uc804\uc1a1\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ucc44\ub110\uc774 \ub2e8\uc808\ub418\uc5c8\ub098\uc694?: [{0}]
nioReplicationTask.unable.drainChannel.ioe=\ubcf5\uc81c worker\uc5d0\uc11c IOException\uc774 \ubc1c\uc0dd\ud588\uc73c\uba70, \ucc44\ub110\uc744 \uae68\ub057\uc774 \ube44\uc6b8 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc788\uc74c\uc9c1\ud55c \uc0ac\uc720: Keep alive \uc18c\ucf13\uc774 \ub2eb\ud788\ub294 \uacbd\uc6b0. [{0}]

nioSender.already.connected=NioSender\uac00 \uc774\ubbf8 \uc5f0\uacb0\ub41c \uc0c1\ud0dc\uc5d0 \uc788\uc2b5\ub2c8\ub2e4.
nioSender.datagram.already.established=\ub370\uc774\ud130\uadf8\ub7a8 \ucc44\ub110\uc774 \uc774\ubbf8 \ud655\ub9bd\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc5f0\uacb0\uc774 \uc9c4\ud589 \uc911\uc778 \uc0c1\ud0dc\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4.
nioSender.key.inValid=\ud0a4\uac00 \uc720\ud6a8\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774\ub294 \ud544\uc2dc \uc774\ubbf8 \ucde8\uc18c\ub418\uc5c8\ub358 \ud0a4\uc77c \uac83\uc785\ub2c8\ub2e4.
nioSender.not.connected=NioSender\uac00 \uc5f0\uacb0\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774\ub294 \uc77c\uc5b4\ub098\uc11c\ub294 \uc548\ub420 \uc77c\uc785\ub2c8\ub2e4.
nioSender.receive.failedAck=\uc2e4\ud328\ud55c ACK: org.apache.catalina.tribes.transport.Constants.FAIL_ACK_DATA\ub97c \ubc1b\uc558\uc2b5\ub2c8\ub2e4.
nioSender.sender.disconnected=Sender\uac00 \uc5f0\uacb0\uc774 \ub04a\uc5b4\uc9c4 \uc0c1\ud0dc\uc785\ub2c8\ub2e4. SelectionKey\ub97c \ucc98\ub9ac\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
nioSender.socketChannel.already.established=\uc18c\ucf13 \ucc44\ub110\uc774 \uc774\ubbf8 \ud655\ub9bd\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ud639\uc2dc \uc5f0\uacb0\uc774 \uc9c4\ud589 \uc911\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4.
nioSender.unable.disconnect=NioSender\uc758 \uc5f0\uacb0\uc744 \ub04a\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uba54\uc2dc\uc9c0=[{0}]
nioSender.unable.receive.ack=Ack \uba54\uc2dc\uc9c0\ub97c \ubc1b\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc18c\ucf13 \ucc44\ub110\uc5d0\uc11c EOF\uc5d0 \ub3c4\ub2ec\ud588\uc2b5\ub2c8\ub2e4.
nioSender.unknown.state=\ub370\uc774\ud130\uac00 \uc54c \uc218 \uc5c6\ub294 \uc0c1\ud0dc\uc5d0 \uc788\uc2b5\ub2c8\ub2e4. readyOps=[{0}]

parallelNioSender.error.keepalive=Sender [{0}]\uc744(\ub97c) \uc704\ud574 keepalive \uac80\uc0ac \uc911 \uc624\ub958 \ubc1c\uc0dd
parallelNioSender.operation.timedout=\uc624\ud37c\ub808\uc774\uc158\uc774 \uc81c\ud55c \uc2dc\uac04 \ucd08\uacfc\ub418\uc5c8\uc2b5\ub2c8\ub2e4 (\uc81c\ud55c \uc2dc\uac04: [{0}] \ubc00\ub9ac\ucd08).
parallelNioSender.send.fail=\uba64\ubc84\uc5d0 \ub300\ud55c \uc804\uc1a1\uc774 \uc2e4\ud328\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4: [{0}]; \uc758\uc2ec \uba64\ubc84\ub85c \uc124\uc815\ud569\ub2c8\ub2e4.
parallelNioSender.send.fail.retrying=\uba64\ubc84\ub85c \uc804\uc1a1\uc774 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4: [{0}]. \uc758\uc2ec \uba64\ubc84\ub85c \uc124\uc815\ud558\uace0 \ub2e4\uc2dc \uc2dc\ub3c4\ud569\ub2c8\ub2e4.
parallelNioSender.send.failed=\ubcd1\ub82c NIO \uc804\uc1a1 \uc2e4\ud328.
parallelNioSender.sendFailed.attempt=\uc804\uc1a1 \uc2e4\ud328, \ucd1d\uc2dc\ub3c4\ud68c\uc218:[{0}] \ucd5c\ub300\uc2dc\ub3c4\ud68c\uc218:[{1}]
parallelNioSender.sender.disconnected.notRetry=[{0}]\uc744(\ub97c) \uc704\ud574 \ub2e4\uc2dc \uc804\uc1a1 \uc2dc\ub3c4\ub97c \ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Sender\uac00 \uc5f0\uacb0\uc774 \ub04a\uacbc\uc2b5\ub2c8\ub2e4.
parallelNioSender.sender.disconnected.sendFailed=\uc804\uc1a1\uc774 \uc2e4\ud328\ud588\uc73c\uba70 sender\uac00 \uc5f0\uacb0\uc774 \ub04a\uacbc\uc2b5\ub2c8\ub2e4. \uc7ac\uc2dc\ub3c4\ub294 \ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.
parallelNioSender.unable.setup.NioSender=NioSender\ub97c \uc14b\uc5c5\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.

pooledParallelSender.sender.disconnected=Sender\uac00 \uc5f0\uacb0\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.
pooledParallelSender.unable.open=NIO selector\ub97c \uc5f4 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
pooledParallelSender.unable.retrieveSender=Sender\ub97c \ud574\ub2f9 sender \ud480\ub85c\ubd80\ud130 \uc5bb\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.
pooledParallelSender.unable.retrieveSender.timeout=\ub370\uc774\ud130 sender\ub97c \uc870\ud68c\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc81c\ud55c \uc2dc\uac04 \ucd08\uacfc ([{0}] \ubc00\ub9ac\ucd08) \uc624\ub958.
