# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

bioReceiver.already.started=\u30b5\u30fc\u30d0\u30fc\u30bd\u30b1\u30c3\u30c8\u306f\u3059\u3067\u306b\u958b\u59cb\u3057\u3066\u3044\u307e\u3059\u3002
bioReceiver.run.fail=\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ea\u30b9\u30ca\u30fc\u3092\u5b9f\u884c\u3067\u304d\u307e\u305b\u3093\u3002
bioReceiver.socket.closeFailed=\u30bd\u30b1\u30c3\u30c8\u3092\u5207\u65ad\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002
bioReceiver.start.fail=\u30af\u30e9\u30b9\u30bf\u30ec\u30b7\u30fc\u30d0\u3092\u8d77\u52d5\u3067\u304d\u307e\u305b\u3093
bioReceiver.threadpool.fail=\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u3092\u521d\u671f\u5316\u3067\u304d\u307e\u305b\u3093\u3002\u30ea\u30b9\u30ca\u30fc\u3092\u958b\u59cb\u3057\u307e\u305b\u3093\u3067\u3057\u305f\u3002
bioReceiver.threads.busy=\u5168\u3066\u306e BIO \u30b5\u30fc\u30d0\u30fc\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b9\u30ec\u30c3\u30c9\u304c\u30d3\u30b8\u30fc\u72b6\u614b\u3067\u3059\u3002\u30b9\u30ec\u30c3\u30c9\u304c\u89e3\u653e\u3055\u308c\u308b\u307e\u3067\u65b0\u3057\u3044\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u51e6\u7406\u3067\u304d\u307e\u305b\u3093\u3002

bioReplicationTask.messageDataReceived.error=messageDataReceived\u304b\u3089\u9001\u51fa\u3055\u308c\u305f\u30a8\u30e9\u30fc
bioReplicationTask.reader.closeFailed=Reader\u3092\u9589\u3058\u308b\u3053\u3068\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002
bioReplicationTask.socket.closeFailed=\u30bd\u30b1\u30c3\u30c8\u30af\u30ed\u30fc\u30b9\u306b\u5931\u6557
bioReplicationTask.unable.sendAck=\u30c1\u30e3\u30f3\u30cd\u30eb\u3078ACK\u3092\u9001\u4fe1\u3067\u304d\u307e\u305b\u3093\u3002\u30c1\u30e3\u30f3\u30cd\u30eb\u304c\u5207\u65ad\u3055\u308c\u3066\u3044\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093: [{0}]
bioReplicationTask.unable.service=bio \u30bd\u30b1\u30c3\u30c8\u3092\u958b\u59cb\u3067\u304d\u307e\u305b\u3093\u3002

bioSender.ack.eof=\u30ed\u30fc\u30ab\u30eb\u30dd\u30fc\u30c8[{0}\uff1a{1\u3001number\u3001integer}]\u3067EOF
bioSender.ack.missing=[{0}:{1,number,integer}] \u304b\u3089 [{2,number,integer}] ms \u4ee5\u5185\u306b\u78ba\u8a8d\u5fdc\u7b54(ACK)\u3092\u8aad\u307f\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u30bd\u30b1\u30c3\u30c8\u3092\u5207\u65ad\u3057\u3066\u518d\u8a66\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002
bioSender.ack.wrong=\u30ed\u30fc\u30ab\u30eb\u30dd\u30fc\u30c8 [{0}:{1,number,integer}] \u304b\u3089 10 \u30d0\u30a4\u30c8\u8aad\u307f\u8fbc\u3093\u3060\u5f8c\u306b\u6b63\u3057\u3044 ACK \u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002
bioSender.closeSocket=[{0}\uff1a{1\u3001number\u3001integer}]\uff08close count {2\u3001number\u3001integer}\uff09\u306b\u9001\u4fe1\u5074\u306e\u30af\u30ed\u30fc\u30ba\u30bd\u30b1\u30c3\u30c8
bioSender.disconnect=[{0}:{1,number,integer}](\u5207\u65ad\u30ab\u30a6\u30f3\u30c8{2,number,integer})\u304b\u3089\u306eSender\u5207\u65ad
bioSender.fail.AckReceived=\u5931\u6557\u3057\u305fACK\uff1aorg.apache.catalina.tribes.transport.Constants.FAIL_ACK_DATA\u306e\u53d7\u4fe1
bioSender.openSocket=Sender \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c [{0}:{1,number,integer}] (\u63a5\u7d9a\u6570 {2,number,integer}) \u3078\u30bd\u30b1\u30c3\u30c8\u63a5\u7d9a\u3092\u958b\u59cb\u3057\u307e\u3057\u305f\u3002
bioSender.openSocket.failure=\u958b\u3044\u3066\u3044\u308bSender\u5074\u30bd\u30b1\u30c3\u30c8[{0}\uff1a{1,number,integer}]\u5931\u6557\uff01 \uff08\u30aa\u30fc\u30d7\u30f3\u5931\u6557\u30ab\u30a6\u30f3\u30c8{2,number,integer})\uff09
bioSender.send.again=[{0}:{1,number,integer}] \u3078\u30c7\u30fc\u30bf\u3092\u518d\u9001\u3057\u307e\u3059\u3002

pooledMultiSender.retrieve.fail=Sender\u30d7\u30fc\u30eb\u304b\u3089Sender\u3092\u53d6\u5f97\u3067\u304d\u307e\u305b\u3093\u3002
pooledMultiSender.unable.retrieve.sender=\u30c7\u30fc\u30bfSender\u3092\u53d6\u5f97\u3067\u304d\u307e\u305b\u3093\u3002\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\uff08[{0}] ms\uff09\u30a8\u30e9\u30fc\u3002
