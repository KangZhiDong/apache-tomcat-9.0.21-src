# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

domainFilterInterceptor.member.refused=\u6210\u5458\u88ab\u62d2\u7edd\u52a0\u5165\u96c6\u7fa4 cluster[{0}]
domainFilterInterceptor.message.refused=\u4ece\u96c6\u7fa4[{0}]\u4e2d\u63a5\u6536\u7684\u6d88\u606f\u88ab\u62d2\u7edd

encryptInterceptor.decrypt.error.short-message=\u89e3\u5bc6\u6d88\u606f\u5931\u8d25: \u7ed3\u5c3e\u6d88\u606f\u63d0\u524d\u7ed3\u675f
encryptInterceptor.encrypt.failed=\u65e0\u6cd5\u52a0\u5bc6\u4fe1\u606f
encryptInterceptor.tcpFailureDetector.ordering=\u52a0\u5bc6\u62e6\u622a\u5668\u5fc5\u987b\u4f4d\u4e8eTCP\u6545\u969c\u68c0\u6d4b\u5668\u7684\u4e0a\u6e38\u3002\u8bf7\u91cd\u65b0\u8ba2\u8d2d\u52a0\u5bc6\u62e6\u622a\u5668\uff0c\u5c06\u5176\u5217\u5728\u901a\u9053\u62e6\u622a\u5668\u7ba1\u9053\u4e2d\u7684TCP\u6545\u969c\u68c0\u6d4b\u5668\u4e4b\u524d\u3002

gzipInterceptor.report=:)GZip \u62e6\u622a\u5668\u62a5\u544a[\n\
\t\u5408\u8ba1 \u6d88\u606f: {0}\n\
\tTx \u538b\u7f29\u7684\u6d88\u606f: {1}\n\
\tTx \u672a\u538b\u7f29\u7684\u6d88\u606f: {2}\n\
\tRx \u538b\u7f29\u7684\u6d88\u606f: {3}\n\
\tRx \u672a\u538b\u7f29\u7684\u6d88\u606f: {4}\n\
\tTx \u603b\u5b57\u8282: {5}\n\
\tTx \u538b\u7f29\u7684\u5b57\u8282: {6}\n\
\tTx \u672a\u538b\u7f29\u7684\u5b57\u8282: {7}\n\
\tRx \u603b\u5b57\u8282: {8}\n\
\tRx \u538b\u7f29\u7684\u5b57\u8282: {9}\n\
\tRx \u672a\u538b\u7f29\u7684\u5b57\u8282: {10}\n\
]

messageDispatchInterceptor.queue.full=\u5f02\u6b65\u961f\u5217\u5df2\u6ee1\uff0c\u8fbe\u5230 [{0}] \u5b57\u8282\u7684\u9650\u5236\uff0c\u5f53\u524d\uff1a[{1}] \u5b57\u8282
messageDispatchInterceptor.unableAdd.queue=\u65e0\u6cd5\u5c06\u6d88\u606f\u6dfb\u52a0\u5230\u5f02\u6b65\u961f\u5217\uff0c\u961f\u5217 bug\uff1f
messageDispatchInterceptor.warning.optionflag=\u8b66\u544a\uff01\u4f60\u6b63\u5728\u8986\u76d6\u5f02\u6b65\u9009\u9879\u6807\u5fd7\uff0c\u8fd9\u5c06\u7981\u7528\u5176\u5b83\u7a0b\u5e8f\u53ef\u80fd\u7528\u5230\u7684 Channel.SEND_OPTIONS_ASYNCHRONOUS\u3002

nonBlockingCoordinator.memberAlive.failed=\u65e0\u6cd5\u6267\u884c\u6210\u5458\u6d3b\u52a8\u68c0\u67e5\uff0c\u731c\u6d4b\u6210\u5458\u4e0b\u7ebf\u3002
nonBlockingCoordinator.processCoordinationMessage.failed=\u5904\u7406\u534f\u8c03\u6d88\u606f\u65f6\u51fa\u9519\u3002 \u53ef\u80fd\u662f\u81f4\u547d\u7684\u3002

staticMembershipInterceptor.no.failureDetector=\u6ca1\u6709TcpFailureDetector\u3002 \u81ea\u52a8\u68c0\u6d4b\u9759\u6001\u6210\u5458\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\u3002 \u901a\u8fc7\u5728TcpFailureDetector\u4e0b\u5b9a\u4e49StaticMembershipInterceptor\uff0c\u53ef\u4ee5\u81ea\u52a8\u68c0\u6d4b\u9759\u6001\u6210\u5458\u3002
staticMembershipInterceptor.no.pingInterceptor=\u5728\u6ca1\u6709TcpPingInterceptor\u7684\u60c5\u51b5\u4e0b\uff0c\u9759\u6001\u6210\u5458\u7684\u5065\u5eb7\u68c0\u67e5\u4e0d\u4f1a\u6b63\u5e38\u5de5\u4f5c\u3002\u53ea\u6709\u5b9a\u4e49\u4e86TcpPingInterceptor\uff0c\u624d\u80fd\u4f7f\u5065\u5eb7\u68c0\u67e5\u6b63\u5e38\u8fdb\u884c\u3002
staticMembershipInterceptor.sendShutdown.failed=\u5173\u95ed\u901a\u77e5\u5931\u8d25\u3002

tcpFailureDetector.failureDetection.failed=\u65e0\u6cd5\u8fdb\u884c\u5931\u8d25\u76d1\u6d4b\uff0c\u5047\u5b9a\u6210\u5458\u5b95\u673a\u3002[{0}]
tcpFailureDetector.heartbeat.failed=TCP\u5fc3\u8df3\u68c0\u6d4b\u5668\u65e0\u6cd5\u6267\u884c\u5fc3\u8df3
tcpFailureDetector.still.alive=\u9a8c\u8bc1\u5b8c\u6210\u3002\u6210\u5458 [{0}] \u4ecd\u7136\u5b58\u6d3b

tcpPingInterceptor.ping.failed=\u65e0\u6cd5\u53d1\u9001 TCP ping
tcpPingInterceptor.pingFailed.pingThread=\u4e0d\u80fd\u4eceping \u7ebf\u7a0b\u53d1\u9001ping

throughputInterceptor.report=\u541e\u5410\u91cf\u62e6\u622a\u5668 \u62a5\u544a[\n\
\   \u4f20\u8f93\u6d88\u606f: {0} \u6d88\u606f\u6570.\n\
\   \u53d1\u9001: {1} MB(\u603b\u5171)\n\
\   \u53d1\u9001: {2} MB (\u5e94\u7528)\n\
\   \u8017\u65f6: {3} \u79d2\n\
\   \u4f20\u8f93\u901f\u7387: {4}MB/sec (\u603b\u5171)\n\
\   \u4f20\u8f93\u901f\u7387: {5}MB/sec (\u5e94\u7528)\n\
\  \u9519\u8bef\u6d88\u606f: {6}\n\
\  \u63a5\u6536\u6d88\u606f: {7} \u6d88\u606f\u6570\n\
\  \u63a5\u6536\u901f\u7387: {8} MB/sec (\u4ece\u7b2c\u4e00\u4e2a\u6d88\u606f\u5f00\u59cb)\n\
\  \u6536\u5230: {9}MB]

twoPhaseCommitInterceptor.heartbeat.failed=\u65e0\u6cd5\u5728\u4e24\u9636\u6bb5\u63d0\u4ea4\u62e6\u622a\u5668\u4e0a\u6267\u884c\u5fc3\u8df3\u3002
